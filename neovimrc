" ---------------------------------------------------
" Load Plugins
" ---------------------------------------------------

call plug#begin('~/.vim/plugged')

Plug 'airblade/vim-rooter'
Plug 'godlygeek/tabular'
Plug 'jszakmeister/vim-togglecursor'
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' } 
Plug 'junegunn/fzf.vim'
Plug 'kien/rainbow_parentheses.vim'
Plug 'Raimondi/delimitMate'
Plug 'scrooloose/nerdcommenter'
Plug 'SirVer/ultisnips',
Plug 'tpope/vim-fugitive' 
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-surround'
Plug 'Valloric/YouCompleteMe', {'do' : './install.py' }
Plug 'vim-scripts/bufkill.vim'
Plug 'altercation/vim-colors-solarized' 

augroup load_us_ycm
  autocmd!
  autocmd InsertEnter * call plug#load('ultisnips', 'YouCompleteMe')
                     \| autocmd! load_us_ycm
augroup END

call plug#end()

" ---------------------------------------------------
" General settings
" ---------------------------------------------------

let mapleader=" "
set colorcolumn=+1,+2
set completeopt-=preview
set diffopt+=iwhite
set diffopt=vertical
set expandtab
set guioptions=
set hidden
set history=150
set hlsearch
set incsearch
set nobackup
set noruler
set number
set relativenumber
set scrolloff=3
set shiftwidth=2
set smartcase
set smarttab
set softtabstop=2
set statusline=%t[%{strlen(&fenc)?&fenc:'none'},%{&ff}]%h%m%r%y%=%c,%l/%L\ %P
set tabstop=2
set textwidth=79
set vb
hi Search cterm=NONE ctermfg=grey ctermbg=Black
syntax enable
colorscheme solarized
set background=dark

" ---------------------------------------------------
" Terminal bindings
" ---------------------------------------------------
tnoremap jk <C-\><C-n>
tnoremap <C-h> <C-\><C-n><C-w>h
tnoremap <C-j> <C-\><C-n><C-w>j
tnoremap <C-k> <C-\><C-n><C-w>k
tnoremap <C-l> <C-\><C-n><C-w>l

" ---------------------------------------------------
" Key bindings
" ---------------------------------------------------

" Vimrc editing
noremap <F6> :e  $MYVIMRC<CR>
noremap <F7> :so $MYVIMRC<CR>

" Window management
nnoremap <Leader>t  :terminal<CR>
nnoremap <Leader>ts :belowright vsplit<CR>:terminal<CR>
nnoremap <Leader>td :belowright split<CR>:terminal<CR>
nnoremap <Leader>s :vsplit<CR>
nnoremap <Leader>d :split<CR>
nnoremap <C-h>     <C-w><Left>
nnoremap <C-l>     <C-w><Right>
nnoremap <C-k>     <C-w><Up>
nnoremap <C-j>     <C-w><Down>
nnoremap <C-Left>  <C-w><
nnoremap <C-Right> <C-w>>
nnoremap <C-Up>    <C-w>+
nnoremap <C-Down>  <C-w>-

" Movement
noremap  k gk
noremap  j gj

" Misc
inoremap jk <Esc>
inoremap JK <Esc>

" Force myself to use the right keys
inoremap <Esc>   <Nop>
inoremap <Left>  <Nop>
inoremap <Right> <Nop>
inoremap <Up>    <Nop>
inoremap <Down>  <Nop>

" Search and the command line
nnoremap :: q:
nnoremap // q/
nnoremap / /\v
vnoremap / /\v

" Buffers
nnoremap <Tab>     :bn<CR>
nnoremap <S-Tab>   :bp<CR>
nnoremap <Leader>Q :bd<CR>
nnoremap <Leader>q :BD<CR>
nnoremap <Leader><Space> :b#<CR>

" Bad Ex mode. Bad!
nnoremap Q <Nop>

" Cleanup whitespace
nnoremap <F8> :%s/\s\+$//<CR>

" ---------------------------------------------------
" Autocommands
" ---------------------------------------------------

" Put these in an autocmd group, so that we can delete them easily.
augroup vimrcEx
au!

 " When editing a file, always jump to the last known cursor position.
 autocmd BufReadPost *
   \ if line("'\"") > 1 && line("'\"") <= line("$") |
   \   exe "normal! g`\"" |
   \ endif

 " Turn on rainbow parentheses
 au VimEnter * RainbowParenthesesToggle
 au Syntax * RainbowParenthesesLoadRound
 au Syntax * RainbowParenthesesLoadSquare
 au Syntax * RainbowParenthesesLoadBraces

augroup END

" ---------------------------------------------------
" Plugin configuration options
" ---------------------------------------------------

" vim-plug
nnoremap <Leader>pi  :PlugInstall<CR>
nnoremap <Leader>pu  :PlugUpdate<CR>
nnoremap <Leader>pc  :PlugClean<CR>
nnoremap <Leader>puu :PlugUpgrade<CR>
nnoremap <Leader>ps  :PlugStatus<CR>

" YouCompleteMe
nnoremap <Leader>] :YcmCompleter GoTo<CR>

" Ultisnips
nnoremap <Leader>u :UltiSnipsEdit<CR>
let g:UltiSnipsExpandTrigger ="<c-k>"
let g:UltiSnipsJumpForwardTrigger="<c-k>"
let g:UltiSnipsJumpBackwardTrigger="<c-j>"
let g:UltiSnipsListSnippets="<c-l>"
let g:UltiSnipsSnippetsDir = '~/.config/nvim/UltiSnips'

" Tabularize
vnoremap a= :Tabularize /=/l1<CR>
vnoremap am :Tabularize /=>/l1<CR>
vnoremap ab :Tabularize /\|/l1<CR>
vnoremap aa :Tabularize /->/l1<CR>
vnoremap at :Tabularize /::/l1<CR>

" FZF
command! -bang -nargs=* Find call fzf#vim#grep('rg --column --line-number --no-heading --fixed-strings --ignore-case --no-ignore --hidden --follow --glob "!.git/*" --color "always" '.shellescape(<q-args>), 1, <bang>0)

let g:fzf_colors =
\ { 'fg':      ['fg', 'Normal'],
  \ 'bg':      ['bg', 'Normal'],
  \ 'hl':      ['fg', 'Comment'],
  \ 'fg+':     ['fg', 'CursorLine', 'CursorColumn', 'Normal'],
  \ 'bg+':     ['bg', 'CursorLine', 'CursorColumn'],
  \ 'hl+':     ['fg', 'Statement'],
  \ 'info':    ['fg', 'PreProc'],
  \ 'prompt':  ['fg', 'Conditional'],
  \ 'pointer': ['fg', 'Exception'],
  \ 'marker':  ['fg', 'Keyword'],
  \ 'spinner': ['fg', 'Label'],
  \ 'header':  ['fg', 'Comment'] }

nnoremap <Leader>f  :Files<CR>
nnoremap <Leader>h  :Helptags<CR>
nnoremap <Leader>/  :Find<CR>
nnoremap <Leader>gc :Commits<CR>
nnoremap <Leader>gb :BCommits<CR>
nnoremap <Leader>m  :Commands<CR>

